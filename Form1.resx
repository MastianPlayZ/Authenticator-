<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>